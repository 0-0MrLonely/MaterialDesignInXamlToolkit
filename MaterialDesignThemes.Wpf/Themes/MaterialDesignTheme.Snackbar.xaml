<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf"
                    xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type wpf:Snackbar}">
        <Style.Resources>
            <converters:NullableToVisibilityConverter x:Key="nullableToVisibilityConverter" />
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpf:Snackbar}">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Hidden" To="Visible">
                                        <Storyboard>
                                            <!-- an animation according to the specs will follow -->
                                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SnackbarScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>-->
                                            <DoubleAnimation Storyboard.TargetName="SnackbarScaleTransform" Storyboard.TargetProperty="ScaleY" From="0" To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Visible" To="Hidden">
                                        <Storyboard>
                                            <!-- an animation according to the specs will follow -->
                                            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SnackbarScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                <EasingDoubleKeyFrame Value="1" KeyTime="0" />
                                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <SineEase EasingMode="EaseInOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>-->
                                            <DoubleAnimation Storyboard.TargetName="SnackbarScaleTransform" Storyboard.TargetProperty="ScaleY" From="1" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SnackbarScaleTransform" Storyboard.TargetProperty="ScaleY" To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SnackbarScaleTransform" Storyboard.TargetProperty="ScaleY" To="0" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_border" Background="#FF323232" CornerRadius="2" MaxWidth="568" MinWidth="288">
                            <Border.RenderTransform>
                                <ScaleTransform x:Name="SnackbarScaleTransform" ScaleX="1" ScaleY="0" CenterY="0.5" />
                            </Border.RenderTransform>
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="100*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Path=Message, RelativeSource={RelativeSource TemplatedParent}}">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignBody1TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Left" />
                                            <Setter Property="Margin" Value="24,14,24,14" />
                                            <Setter Property="FontSize" Value="14" />
                                            <Setter Property="Foreground" Value="#DDFFFFFF" />
                                            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <Button x:Name="PART_actionButton" Grid.Column="1" Content="{Binding Path=ActionLabel, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatAccentButton}">
                                            <Setter Property="Margin" Value="8,0,8,0" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="Visibility" Value="{Binding Path=ActionLabel, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource nullableToVisibilityConverter}}" />
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>