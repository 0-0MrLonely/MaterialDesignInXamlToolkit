<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             x:Class="MaterialDesignColors.WpfExample.ProvingGround"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:wpfExample="clr-namespace:MaterialDesignColors.WpfExample"
             xmlns:provingGroundStuff="clr-namespace:MaterialDesignDemo.ProvingGroundStuff"
             mc:Ignorable="d"              
			 d:DesignWidth="477" d:DesignHeight="272"
             d:DataContext="{d:DesignInstance wpfExample:ProvingGroundViewModel, d:IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <!--
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                -->
            </ResourceDictionary.MergedDictionaries>



            <Style TargetType="{x:Type provingGroundStuff:MeasuringTextBox}" BasedOn="{StaticResource MaterialDesignTextBox}" />



        </ResourceDictionary>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Left">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!-- example 1 -->
        <Border Background="{DynamicResource MaterialDesignSelection}" Grid.RowSpan="2"
                Padding="8 0 8 0">
            <Grid>
                <ToggleButton IsChecked="{Binding ElementName=SnackbarOne, Path=IsActive, Mode=TwoWay}" />

                <!-- simplest form -->
                <materialDesign:Snackbar2 Message="hello 1" 
                                          IsActive="False"
                                          x:Name="SnackbarOne" />
            </Grid>
        </Border>

        <!-- example 2 -->
        <Border Background="{DynamicResource MaterialDesignPaper}" 
                Padding="8 0 8 0"
                Grid.Column="1">
            <Grid>
                <ToggleButton IsChecked="{Binding ElementName=SnackbarTwo, Path=IsActive, Mode=TwoWay}" />
                <!-- long hand form for setting the message -->
                <materialDesign:Snackbar2 IsActive="False"
                                          x:Name="SnackbarTwo" >
                    <materialDesign:SnackbarMessage Content="Hello 2" ActionContent="UNDO" />
                </materialDesign:Snackbar2>
            </Grid>
        </Border>

        <!-- example 3 -->
        <!--
                * using a message queue to manage queuing of messages, and getting onto correct thread
                * notice the shorthand syntax {materialDesign:MessageQueue} for creating a new message 
                queue without expanded XAML. useful in code-behind scenarios if you dont want to bind 
                a message queue in to the snackbar.
            -->
        <Border Background="{DynamicResource MaterialDesignSelection}" 
                Padding="8 0 8 0"                
                Grid.Column="2">
            <Grid>
                <StackPanel Orientation="Horizontal">
                    <TextBlock HorizontalAlignment="Center">Message:</TextBlock>
                    <TextBox x:Name="MessageTextBox" HorizontalAlignment="Center">Hello World</TextBox>
                    <Button Click="SnackBar3_OnClick" HorizontalAlignment="Center">Send</Button>
                </StackPanel>
                <materialDesign:Snackbar2 MessageQueue="{materialDesign:MessageQueue}"
                                          x:Name="SnackbarThree" />
            </Grid>
        </Border>

        <!-- example 4 -->
        <!-- uses some action command call backs -->
        <Border Background="{DynamicResource MaterialDesignPaper}" 
                Padding="8 0 8 0"                
                Grid.Column="3">
            <Grid>
                <materialDesign:Snackbar2 MessageQueue="{materialDesign:MessageQueue}"
                                          x:Name="SnackbarFour" />
                <Button Click="SnackBar4_OnClick" HorizontalAlignment="Center">Send</Button>
            </Grid>
        </Border>

        <Border Background="{DynamicResource MaterialDesignSelection}" 
                Grid.ColumnSpan="4"
                Grid.Row="1">
            <StackPanel VerticalAlignment="Bottom">
                <ToggleButton IsChecked="{Binding ElementName=SnackbarFive, Path=IsActive, Mode=TwoWay}"
                              Margin="0 0 0 24"/>
                <materialDesign:Snackbar2 HorizontalAlignment="Stretch"
                                          x:Name="SnackbarFive">
                    <materialDesign:SnackbarMessage Content="This Snackbar is stretched horizontally. You should ensure your content is pushed up."                                                    
                                                    ActionContent="OK" />
                </materialDesign:Snackbar2>
            </StackPanel>
        </Border>

    </Grid>

</UserControl>
